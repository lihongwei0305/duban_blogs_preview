import{_ as e,c as l,o as i,N as o}from"./chunks/framework.d9f2368f.js";const m=JSON.parse('{"title":"用户管理","description":"","frontmatter":{},"headers":[],"relativePath":"src/linux/user.md"}'),d={name:"src/linux/user.md"},c=o('<h1 id="用户管理" tabindex="-1">用户管理 <a class="header-anchor" href="#用户管理" aria-label="Permalink to &quot;用户管理&quot;">​</a></h1><h3>Linux安全系统的核心是用户账户。每个能进入Linux系统的用户都会被分配唯一的用户账户。用户对系统中各种对象的访问权限取决于他们登录系统时用的账户。</h3><h2 id="etc-passwd文件" tabindex="-1">/etc/passwd文件 <a class="header-anchor" href="#etc-passwd文件" aria-label="Permalink to &quot;/etc/passwd文件&quot;">​</a></h2><ul><li>Linux系统使用一个专门的文件来将用户的登录名匹配到对应的UID值。这个文件就是/etc/passwd文件，它包含了一些与用户有关的信息。 <ul><li>eg: <code>root:x:0:0:root:/root:/bin/bash</code><ul><li>用户名</li><li>用户密码</li><li>用户UID</li><li>用户组的ID(GID)</li><li>用户账号的文本描述(备注)</li><li>用户HOME的目录位置</li><li>用户的默认shell</li></ul></li></ul></li></ul><h2 id="etc-shadow文件" tabindex="-1">/etc/shadow文件 <a class="header-anchor" href="#etc-shadow文件" aria-label="Permalink to &quot;/etc/shadow文件&quot;">​</a></h2><ul><li>/etc/shadow文件对Linux系统密码管理提供了更多的控制。 <ul><li>eg: <code>root:$6$3SJFHyF8jOCzSH0b$u4ii1FLHCb0EdEvx3mtN.oNeh4HHlGOqUoTwnB0c8jy.B62HGJTg0rdSzxA5pWECFmXZXEGbnYwB4PBYjkSAi/::0:99999:7:::</code><ul><li>登录名</li><li>加密后的密码</li><li>自上次修改密码后过去的天数密码（自1970年1月1日开始计算）</li><li>多少天后才能更改密码</li><li>多少天后必须更改密码</li><li>密码过期前提前多少天提醒用户更改密码</li><li>密码过期后多少天禁用用户账户</li><li>用户账户被禁用的日期（用自1970年1月1日到当天的天数表示）</li><li>预留字段给将来使用</li></ul></li></ul></li></ul><h2 id="添加用户" tabindex="-1">添加用户 <a class="header-anchor" href="#添加用户" aria-label="Permalink to &quot;添加用户&quot;">​</a></h2><ul><li><code>useradd</code><ul><li><code>-c</code> 给新用户添加备注</li><li><code>-d</code> 为主目录指定一个名字(如果不想用登录名作为主目录名)</li><li><code>-e</code> 用YYYY-MM-DD格式指定账号的过期日期</li><li><code>-f</code> 指定这个账户密码过期后多少天这个账户被禁用；0表示密码一过期就立即禁用，1表示禁用这个功能</li><li><code>-g</code> 指定用户的GID</li><li><code>-k</code> 必须和-m一起使用，将/etc/skel目录的内容复制到用户的HOME目录</li><li><code>-m</code> 创建用户的HOME目录</li><li><code>-M</code> 不创建用户的HOME目录</li><li><code>-n</code> 创建一个和登录名一样的新组</li><li><code>-r</code> 创建系统账户 ID &lt; 1000</li><li><code>-p</code> 密码</li><li><code>-s</code> 指定shell</li><li><code>-u</code> 指定uid</li></ul></li></ul><h2 id="刪除用户" tabindex="-1">刪除用户 <a class="header-anchor" href="#刪除用户" aria-label="Permalink to &quot;刪除用户&quot;">​</a></h2><ul><li><code>userdel</code> 默认删除/etc/shadow文件中的用户信息 <ul><li><code>-r</code> 删除HOME目录以及邮件目录</li></ul></li></ul><h2 id="修改用户" tabindex="-1">修改用户 <a class="header-anchor" href="#修改用户" aria-label="Permalink to &quot;修改用户&quot;">​</a></h2><ul><li><p><code>uesrmod</code></p><ul><li><code>-l</code> 修改登录名</li><li><code>-p</code> 修改账户的密码</li><li><code>-L</code> 锁定账户,使用户无法登陆</li><li><code>-U</code> 解除锁定</li></ul></li><li><p><code>passwd</code> 修改密码</p><ul><li><code>-e</code> 强制用户下次登录时修改密码</li><li>eg: <code>echo admin | --stdin passwd user</code></li></ul></li><li><p><code>chpasswd</code> 从标准输入自动读取登录名和密码对（由冒号分割）列表，给密码加密，然后为用户账户设置。</p><ul><li>eg: <code>chpasswd &lt; users.txt</code></li><li>eg: <code>cat user:admin | chpasswd</code></li></ul></li><li><p><code>chage</code><code>-d</code> 设置上次修改密码到现在的天数 <code>-E</code> 设置密码过期的日期 <code>-I</code> 设置密码过期到锁定账户的天数 <code>-m</code> 设置修改密码之间最少要多少天 <code>-W</code> 设置密码过期前多久开始出现提醒信息</p></li></ul>',12),a=[c];function t(s,r,u,h,n,p){return i(),l("div",null,a)}const x=e(d,[["render",t]]);export{m as __pageData,x as default};
